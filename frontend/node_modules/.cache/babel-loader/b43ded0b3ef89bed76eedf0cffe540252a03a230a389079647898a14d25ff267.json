{"ast":null,"code":"var _jsxFileName = \"/Users/mariamagera/Downloads/serat/frontend/src/components/Monitor/OperationLogs.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Card, Table, Button, Space, Input, message, Tag, Row, Col, DatePicker, Select, Descriptions, Modal } from 'antd';\nimport { ReloadOutlined, EyeOutlined, DeleteOutlined, ExportOutlined, SearchOutlined } from '@ant-design/icons';\nimport { monitorAPI } from '../../services/api';\nimport moment from 'moment';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst {\n  Search\n} = Input;\nconst {\n  RangePicker\n} = DatePicker;\nconst {\n  Option\n} = Select;\nconst OperationLogs = () => {\n  _s();\n  const [logs, setLogs] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [searchValue, setSearchValue] = useState('');\n  const [selectedLog, setSelectedLog] = useState(null);\n  const [detailVisible, setDetailVisible] = useState(false);\n  useEffect(() => {\n    fetchLogs();\n  }, []);\n  const fetchLogs = async () => {\n    setLoading(true);\n    try {\n      const response = await monitorAPI.getOperationLogs();\n      if (response.data.code === 200) {\n        setLogs(response.data.rows || []);\n      }\n    } catch (error) {\n      message.error('Failed to fetch operation logs');\n    } finally {\n      setLoading(false);\n    }\n  };\n  const handleView = record => {\n    setSelectedLog(record);\n    setDetailVisible(true);\n  };\n  const handleExport = async () => {\n    try {\n      const response = await monitorAPI.exportOperationLogs();\n      // Handle file download\n      const url = window.URL.createObjectURL(new Blob([response.data]));\n      const link = document.createElement('a');\n      link.href = url;\n      link.setAttribute('download', 'operation_logs.xlsx');\n      document.body.appendChild(link);\n      link.click();\n      link.remove();\n      message.success('Export successful');\n    } catch (error) {\n      message.error('Export failed');\n    }\n  };\n  const getStatusColor = status => {\n    return status === 0 ? 'green' : 'red';\n  };\n  const getStatusText = status => {\n    return status === 0 ? 'Success' : 'Failed';\n  };\n  const getOperTypeColor = operType => {\n    const colors = {\n      '1': 'blue',\n      // Insert\n      '2': 'green',\n      // Update\n      '3': 'red',\n      // Delete\n      '4': 'orange',\n      // Grant\n      '5': 'purple',\n      // Export\n      '6': 'cyan',\n      // Import\n      '7': 'gold',\n      // Force logout\n      '8': 'lime',\n      // Generate code\n      '9': 'magenta' // Clear data\n    };\n    return colors[operType] || 'default';\n  };\n  const getOperTypeText = operType => {\n    const types = {\n      '1': 'Insert',\n      '2': 'Update',\n      '3': 'Delete',\n      '4': 'Grant',\n      '5': 'Export',\n      '6': 'Import',\n      '7': 'Force Logout',\n      '8': 'Generate Code',\n      '9': 'Clear Data'\n    };\n    return types[operType] || 'Other';\n  };\n\n  // Sample data for demo\n  const sampleLogs = [{\n    operId: 1,\n    title: 'User Management',\n    businessType: '2',\n    method: 'com.a.map.controller.system.SysUserController.edit()',\n    requestMethod: 'PUT',\n    operatorType: '1',\n    operName: 'admin',\n    deptName: 'IT Department',\n    operUrl: '/system/user',\n    operIp: '192.168.1.100',\n    operLocation: 'Internal Network',\n    operParam: '{\"userId\":1,\"userName\":\"admin\",\"status\":\"0\"}',\n    jsonResult: '{\"code\":200,\"msg\":\"success\"}',\n    status: 0,\n    errorMsg: '',\n    operTime: '2025-01-24 15:30:25',\n    costTime: 156\n  }, {\n    operId: 2,\n    title: 'Role Management',\n    businessType: '1',\n    method: 'com.a.map.controller.system.SysRoleController.add()',\n    requestMethod: 'POST',\n    operatorType: '1',\n    operName: 'admin',\n    deptName: 'IT Department',\n    operUrl: '/system/role',\n    operIp: '192.168.1.100',\n    operLocation: 'Internal Network',\n    operParam: '{\"roleName\":\"Test Role\",\"roleKey\":\"test\"}',\n    jsonResult: '{\"code\":200,\"msg\":\"success\"}',\n    status: 0,\n    errorMsg: '',\n    operTime: '2025-01-24 15:25:10',\n    costTime: 89\n  }];\n  const filteredLogs = (logs.length > 0 ? logs : sampleLogs).filter(log => {\n    if (!searchValue) return true;\n    return log.title.toLowerCase().includes(searchValue.toLowerCase()) || log.operName.toLowerCase().includes(searchValue.toLowerCase()) || log.operIp.includes(searchValue);\n  });\n  const columns = [{\n    title: 'Operation ID',\n    dataIndex: 'operId',\n    key: 'operId',\n    width: 100\n  }, {\n    title: 'System Module',\n    dataIndex: 'title',\n    key: 'title'\n  }, {\n    title: 'Operation Type',\n    dataIndex: 'businessType',\n    key: 'businessType',\n    render: type => /*#__PURE__*/_jsxDEV(Tag, {\n      color: getOperTypeColor(type),\n      children: getOperTypeText(type)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 9\n    }, this)\n  }, {\n    title: 'Operator',\n    dataIndex: 'operName',\n    key: 'operName'\n  }, {\n    title: 'Department',\n    dataIndex: 'deptName',\n    key: 'deptName',\n    render: text => text || '-'\n  }, {\n    title: 'IP Address',\n    dataIndex: 'operIp',\n    key: 'operIp'\n  }, {\n    title: 'Location',\n    dataIndex: 'operLocation',\n    key: 'operLocation'\n  }, {\n    title: 'Status',\n    dataIndex: 'status',\n    key: 'status',\n    render: status => /*#__PURE__*/_jsxDEV(Tag, {\n      color: getStatusColor(status),\n      children: getStatusText(status)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 215,\n      columnNumber: 9\n    }, this)\n  }, {\n    title: 'Operation Time',\n    dataIndex: 'operTime',\n    key: 'operTime',\n    width: 180,\n    sorter: (a, b) => moment(a.operTime).unix() - moment(b.operTime).unix()\n  }, {\n    title: 'Cost Time',\n    dataIndex: 'costTime',\n    key: 'costTime',\n    render: time => `${time}ms`,\n    sorter: (a, b) => a.costTime - b.costTime\n  }, {\n    title: 'Actions',\n    key: 'actions',\n    width: 120,\n    render: (_, record) => /*#__PURE__*/_jsxDEV(Space, {\n      size: \"small\",\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        type: \"link\",\n        icon: /*#__PURE__*/_jsxDEV(EyeOutlined, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 242,\n          columnNumber: 19\n        }, this),\n        onClick: () => handleView(record),\n        size: \"small\",\n        children: \"View\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 240,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 239,\n      columnNumber: 9\n    }, this)\n  }];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Card, {\n      title: \"Operation Logs\",\n      style: {\n        marginBottom: 16\n      },\n      children: /*#__PURE__*/_jsxDEV(Row, {\n        gutter: [16, 16],\n        justify: \"space-between\",\n        align: \"middle\",\n        children: [/*#__PURE__*/_jsxDEV(Col, {\n          span: 8,\n          children: /*#__PURE__*/_jsxDEV(Search, {\n            placeholder: \"Search by module, operator, or IP\",\n            value: searchValue,\n            onChange: e => setSearchValue(e.target.value),\n            style: {\n              width: '100%'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 258,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 257,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          children: /*#__PURE__*/_jsxDEV(Space, {\n            children: [/*#__PURE__*/_jsxDEV(Button, {\n              icon: /*#__PURE__*/_jsxDEV(ExportOutlined, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 268,\n                columnNumber: 23\n              }, this),\n              onClick: handleExport,\n              children: \"Export\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 267,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              icon: /*#__PURE__*/_jsxDEV(ReloadOutlined, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 274,\n                columnNumber: 23\n              }, this),\n              onClick: fetchLogs,\n              children: \"Refresh\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 273,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 266,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 265,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 256,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 255,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Card, {\n      children: /*#__PURE__*/_jsxDEV(Table, {\n        columns: columns,\n        dataSource: filteredLogs,\n        rowKey: \"operId\",\n        loading: loading,\n        pagination: {\n          pageSize: 10,\n          showSizeChanger: true,\n          showQuickJumper: true,\n          showTotal: (total, range) => `${range[0]}-${range[1]} of ${total} items`\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 285,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 284,\n      columnNumber: 7\n    }, this), selectedLog && /*#__PURE__*/_jsxDEV(Modal, {\n      title: \"Operation Log Details\",\n      visible: detailVisible,\n      onCancel: () => setDetailVisible(false),\n      footer: [/*#__PURE__*/_jsxDEV(Button, {\n        onClick: () => setDetailVisible(false),\n        children: \"Close\"\n      }, \"close\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 307,\n        columnNumber: 13\n      }, this)],\n      width: 800,\n      children: /*#__PURE__*/_jsxDEV(Descriptions, {\n        bordered: true,\n        column: 2,\n        children: [/*#__PURE__*/_jsxDEV(Descriptions.Item, {\n          label: \"Operation ID\",\n          children: selectedLog.operId\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 314,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Descriptions.Item, {\n          label: \"System Module\",\n          children: selectedLog.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 315,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Descriptions.Item, {\n          label: \"Operation Type\",\n          children: /*#__PURE__*/_jsxDEV(Tag, {\n            color: getOperTypeColor(selectedLog.businessType),\n            children: getOperTypeText(selectedLog.businessType)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 317,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 316,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Descriptions.Item, {\n          label: \"Request Method\",\n          children: /*#__PURE__*/_jsxDEV(Tag, {\n            color: \"blue\",\n            children: selectedLog.requestMethod\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 322,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 321,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Descriptions.Item, {\n          label: \"Operator\",\n          children: selectedLog.operName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 324,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Descriptions.Item, {\n          label: \"Department\",\n          children: selectedLog.deptName || '-'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 325,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Descriptions.Item, {\n          label: \"Request URL\",\n          span: 2,\n          children: /*#__PURE__*/_jsxDEV(\"code\", {\n            children: selectedLog.operUrl\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 327,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 326,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Descriptions.Item, {\n          label: \"IP Address\",\n          children: selectedLog.operIp\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 329,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Descriptions.Item, {\n          label: \"Location\",\n          children: selectedLog.operLocation\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 330,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Descriptions.Item, {\n          label: \"Status\",\n          children: /*#__PURE__*/_jsxDEV(Tag, {\n            color: getStatusColor(selectedLog.status),\n            children: getStatusText(selectedLog.status)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 332,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 331,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Descriptions.Item, {\n          label: \"Cost Time\",\n          children: [selectedLog.costTime, \"ms\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 336,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Descriptions.Item, {\n          label: \"Operation Time\",\n          span: 2,\n          children: selectedLog.operTime\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 337,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Descriptions.Item, {\n          label: \"Method Name\",\n          span: 2,\n          children: /*#__PURE__*/_jsxDEV(\"code\", {\n            style: {\n              fontSize: '12px'\n            },\n            children: selectedLog.method\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 341,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 340,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Descriptions.Item, {\n          label: \"Request Parameters\",\n          span: 2,\n          children: /*#__PURE__*/_jsxDEV(\"pre\", {\n            style: {\n              background: '#f5f5f5',\n              padding: '8px',\n              borderRadius: '4px',\n              fontSize: '12px',\n              maxHeight: '200px',\n              overflow: 'auto'\n            },\n            children: JSON.stringify(JSON.parse(selectedLog.operParam || '{}'), null, 2)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 344,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 343,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Descriptions.Item, {\n          label: \"Response Result\",\n          span: 2,\n          children: /*#__PURE__*/_jsxDEV(\"pre\", {\n            style: {\n              background: '#f5f5f5',\n              padding: '8px',\n              borderRadius: '4px',\n              fontSize: '12px',\n              maxHeight: '200px',\n              overflow: 'auto'\n            },\n            children: JSON.stringify(JSON.parse(selectedLog.jsonResult || '{}'), null, 2)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 356,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 355,\n          columnNumber: 13\n        }, this), selectedLog.errorMsg && /*#__PURE__*/_jsxDEV(Descriptions.Item, {\n          label: \"Error Message\",\n          span: 2,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              color: 'red'\n            },\n            children: selectedLog.errorMsg\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 369,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 368,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 313,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 302,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 254,\n    columnNumber: 5\n  }, this);\n};\n_s(OperationLogs, \"hP8vgnLvP3gOeI6FjmpBciohEXg=\");\n_c = OperationLogs;\nexport default OperationLogs;\nvar _c;\n$RefreshReg$(_c, \"OperationLogs\");","map":{"version":3,"names":["React","useState","useEffect","Card","Table","Button","Space","Input","message","Tag","Row","Col","DatePicker","Select","Descriptions","Modal","ReloadOutlined","EyeOutlined","DeleteOutlined","ExportOutlined","SearchOutlined","monitorAPI","moment","jsxDEV","_jsxDEV","Search","RangePicker","Option","OperationLogs","_s","logs","setLogs","loading","setLoading","searchValue","setSearchValue","selectedLog","setSelectedLog","detailVisible","setDetailVisible","fetchLogs","response","getOperationLogs","data","code","rows","error","handleView","record","handleExport","exportOperationLogs","url","window","URL","createObjectURL","Blob","link","document","createElement","href","setAttribute","body","appendChild","click","remove","success","getStatusColor","status","getStatusText","getOperTypeColor","operType","colors","getOperTypeText","types","sampleLogs","operId","title","businessType","method","requestMethod","operatorType","operName","deptName","operUrl","operIp","operLocation","operParam","jsonResult","errorMsg","operTime","costTime","filteredLogs","length","filter","log","toLowerCase","includes","columns","dataIndex","key","width","render","type","color","children","fileName","_jsxFileName","lineNumber","columnNumber","text","sorter","a","b","unix","time","_","size","icon","onClick","style","marginBottom","gutter","justify","align","span","placeholder","value","onChange","e","target","dataSource","rowKey","pagination","pageSize","showSizeChanger","showQuickJumper","showTotal","total","range","visible","onCancel","footer","bordered","column","Item","label","fontSize","background","padding","borderRadius","maxHeight","overflow","JSON","stringify","parse","_c","$RefreshReg$"],"sources":["/Users/mariamagera/Downloads/serat/frontend/src/components/Monitor/OperationLogs.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport {\n  Card,\n  Table,\n  Button,\n  Space,\n  Input,\n  message,\n  Tag,\n  Row,\n  Col,\n  DatePicker,\n  Select,\n  Descriptions,\n  Modal\n} from 'antd';\nimport {\n  ReloadOutlined,\n  EyeOutlined,\n  DeleteOutlined,\n  ExportOutlined,\n  SearchOutlined\n} from '@ant-design/icons';\nimport { monitorAPI } from '../../services/api';\nimport moment from 'moment';\n\nconst { Search } = Input;\nconst { RangePicker } = DatePicker;\nconst { Option } = Select;\n\nconst OperationLogs = () => {\n  const [logs, setLogs] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [searchValue, setSearchValue] = useState('');\n  const [selectedLog, setSelectedLog] = useState(null);\n  const [detailVisible, setDetailVisible] = useState(false);\n\n  useEffect(() => {\n    fetchLogs();\n  }, []);\n\n  const fetchLogs = async () => {\n    setLoading(true);\n    try {\n      const response = await monitorAPI.getOperationLogs();\n      if (response.data.code === 200) {\n        setLogs(response.data.rows || []);\n      }\n    } catch (error) {\n      message.error('Failed to fetch operation logs');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleView = (record) => {\n    setSelectedLog(record);\n    setDetailVisible(true);\n  };\n\n  const handleExport = async () => {\n    try {\n      const response = await monitorAPI.exportOperationLogs();\n      // Handle file download\n      const url = window.URL.createObjectURL(new Blob([response.data]));\n      const link = document.createElement('a');\n      link.href = url;\n      link.setAttribute('download', 'operation_logs.xlsx');\n      document.body.appendChild(link);\n      link.click();\n      link.remove();\n      message.success('Export successful');\n    } catch (error) {\n      message.error('Export failed');\n    }\n  };\n\n  const getStatusColor = (status) => {\n    return status === 0 ? 'green' : 'red';\n  };\n\n  const getStatusText = (status) => {\n    return status === 0 ? 'Success' : 'Failed';\n  };\n\n  const getOperTypeColor = (operType) => {\n    const colors = {\n      '1': 'blue',    // Insert\n      '2': 'green',   // Update\n      '3': 'red',     // Delete\n      '4': 'orange',  // Grant\n      '5': 'purple',  // Export\n      '6': 'cyan',    // Import\n      '7': 'gold',    // Force logout\n      '8': 'lime',    // Generate code\n      '9': 'magenta', // Clear data\n    };\n    return colors[operType] || 'default';\n  };\n\n  const getOperTypeText = (operType) => {\n    const types = {\n      '1': 'Insert',\n      '2': 'Update', \n      '3': 'Delete',\n      '4': 'Grant',\n      '5': 'Export',\n      '6': 'Import',\n      '7': 'Force Logout',\n      '8': 'Generate Code',\n      '9': 'Clear Data',\n    };\n    return types[operType] || 'Other';\n  };\n\n  // Sample data for demo\n  const sampleLogs = [\n    {\n      operId: 1,\n      title: 'User Management',\n      businessType: '2',\n      method: 'com.a.map.controller.system.SysUserController.edit()',\n      requestMethod: 'PUT',\n      operatorType: '1',\n      operName: 'admin',\n      deptName: 'IT Department',\n      operUrl: '/system/user',\n      operIp: '192.168.1.100',\n      operLocation: 'Internal Network',\n      operParam: '{\"userId\":1,\"userName\":\"admin\",\"status\":\"0\"}',\n      jsonResult: '{\"code\":200,\"msg\":\"success\"}',\n      status: 0,\n      errorMsg: '',\n      operTime: '2025-01-24 15:30:25',\n      costTime: 156\n    },\n    {\n      operId: 2,\n      title: 'Role Management',\n      businessType: '1',\n      method: 'com.a.map.controller.system.SysRoleController.add()',\n      requestMethod: 'POST',\n      operatorType: '1',\n      operName: 'admin',\n      deptName: 'IT Department',\n      operUrl: '/system/role',\n      operIp: '192.168.1.100',\n      operLocation: 'Internal Network',\n      operParam: '{\"roleName\":\"Test Role\",\"roleKey\":\"test\"}',\n      jsonResult: '{\"code\":200,\"msg\":\"success\"}',\n      status: 0,\n      errorMsg: '',\n      operTime: '2025-01-24 15:25:10',\n      costTime: 89\n    }\n  ];\n\n  const filteredLogs = (logs.length > 0 ? logs : sampleLogs).filter(log => {\n    if (!searchValue) return true;\n    return (\n      log.title.toLowerCase().includes(searchValue.toLowerCase()) ||\n      log.operName.toLowerCase().includes(searchValue.toLowerCase()) ||\n      log.operIp.includes(searchValue)\n    );\n  });\n\n  const columns = [\n    {\n      title: 'Operation ID',\n      dataIndex: 'operId',\n      key: 'operId',\n      width: 100,\n    },\n    {\n      title: 'System Module',\n      dataIndex: 'title',\n      key: 'title',\n    },\n    {\n      title: 'Operation Type',\n      dataIndex: 'businessType',\n      key: 'businessType',\n      render: (type) => (\n        <Tag color={getOperTypeColor(type)}>\n          {getOperTypeText(type)}\n        </Tag>\n      ),\n    },\n    {\n      title: 'Operator',\n      dataIndex: 'operName',\n      key: 'operName',\n    },\n    {\n      title: 'Department',\n      dataIndex: 'deptName',\n      key: 'deptName',\n      render: (text) => text || '-',\n    },\n    {\n      title: 'IP Address',\n      dataIndex: 'operIp',\n      key: 'operIp',\n    },\n    {\n      title: 'Location',\n      dataIndex: 'operLocation',\n      key: 'operLocation',\n    },\n    {\n      title: 'Status',\n      dataIndex: 'status',\n      key: 'status',\n      render: (status) => (\n        <Tag color={getStatusColor(status)}>\n          {getStatusText(status)}\n        </Tag>\n      ),\n    },\n    {\n      title: 'Operation Time',\n      dataIndex: 'operTime',\n      key: 'operTime',\n      width: 180,\n      sorter: (a, b) => moment(a.operTime).unix() - moment(b.operTime).unix(),\n    },\n    {\n      title: 'Cost Time',\n      dataIndex: 'costTime',\n      key: 'costTime',\n      render: (time) => `${time}ms`,\n      sorter: (a, b) => a.costTime - b.costTime,\n    },\n    {\n      title: 'Actions',\n      key: 'actions',\n      width: 120,\n      render: (_, record) => (\n        <Space size=\"small\">\n          <Button\n            type=\"link\"\n            icon={<EyeOutlined />}\n            onClick={() => handleView(record)}\n            size=\"small\"\n          >\n            View\n          </Button>\n        </Space>\n      ),\n    },\n  ];\n\n  return (\n    <div>\n      <Card title=\"Operation Logs\" style={{ marginBottom: 16 }}>\n        <Row gutter={[16, 16]} justify=\"space-between\" align=\"middle\">\n          <Col span={8}>\n            <Search\n              placeholder=\"Search by module, operator, or IP\"\n              value={searchValue}\n              onChange={(e) => setSearchValue(e.target.value)}\n              style={{ width: '100%' }}\n            />\n          </Col>\n          <Col>\n            <Space>\n              <Button\n                icon={<ExportOutlined />}\n                onClick={handleExport}\n              >\n                Export\n              </Button>\n              <Button\n                icon={<ReloadOutlined />}\n                onClick={fetchLogs}\n              >\n                Refresh\n              </Button>\n            </Space>\n          </Col>\n        </Row>\n      </Card>\n\n      <Card>\n        <Table\n          columns={columns}\n          dataSource={filteredLogs}\n          rowKey=\"operId\"\n          loading={loading}\n          pagination={{\n            pageSize: 10,\n            showSizeChanger: true,\n            showQuickJumper: true,\n            showTotal: (total, range) =>\n              `${range[0]}-${range[1]} of ${total} items`,\n          }}\n        />\n      </Card>\n\n      {/* Log Detail Modal */}\n      {selectedLog && (\n        <Modal\n          title=\"Operation Log Details\"\n          visible={detailVisible}\n          onCancel={() => setDetailVisible(false)}\n          footer={[\n            <Button key=\"close\" onClick={() => setDetailVisible(false)}>\n              Close\n            </Button>\n          ]}\n          width={800}\n        >\n          <Descriptions bordered column={2}>\n            <Descriptions.Item label=\"Operation ID\">{selectedLog.operId}</Descriptions.Item>\n            <Descriptions.Item label=\"System Module\">{selectedLog.title}</Descriptions.Item>\n            <Descriptions.Item label=\"Operation Type\">\n              <Tag color={getOperTypeColor(selectedLog.businessType)}>\n                {getOperTypeText(selectedLog.businessType)}\n              </Tag>\n            </Descriptions.Item>\n            <Descriptions.Item label=\"Request Method\">\n              <Tag color=\"blue\">{selectedLog.requestMethod}</Tag>\n            </Descriptions.Item>\n            <Descriptions.Item label=\"Operator\">{selectedLog.operName}</Descriptions.Item>\n            <Descriptions.Item label=\"Department\">{selectedLog.deptName || '-'}</Descriptions.Item>\n            <Descriptions.Item label=\"Request URL\" span={2}>\n              <code>{selectedLog.operUrl}</code>\n            </Descriptions.Item>\n            <Descriptions.Item label=\"IP Address\">{selectedLog.operIp}</Descriptions.Item>\n            <Descriptions.Item label=\"Location\">{selectedLog.operLocation}</Descriptions.Item>\n            <Descriptions.Item label=\"Status\">\n              <Tag color={getStatusColor(selectedLog.status)}>\n                {getStatusText(selectedLog.status)}\n              </Tag>\n            </Descriptions.Item>\n            <Descriptions.Item label=\"Cost Time\">{selectedLog.costTime}ms</Descriptions.Item>\n            <Descriptions.Item label=\"Operation Time\" span={2}>\n              {selectedLog.operTime}\n            </Descriptions.Item>\n            <Descriptions.Item label=\"Method Name\" span={2}>\n              <code style={{ fontSize: '12px' }}>{selectedLog.method}</code>\n            </Descriptions.Item>\n            <Descriptions.Item label=\"Request Parameters\" span={2}>\n              <pre style={{ \n                background: '#f5f5f5', \n                padding: '8px', \n                borderRadius: '4px',\n                fontSize: '12px',\n                maxHeight: '200px',\n                overflow: 'auto'\n              }}>\n                {JSON.stringify(JSON.parse(selectedLog.operParam || '{}'), null, 2)}\n              </pre>\n            </Descriptions.Item>\n            <Descriptions.Item label=\"Response Result\" span={2}>\n              <pre style={{ \n                background: '#f5f5f5', \n                padding: '8px', \n                borderRadius: '4px',\n                fontSize: '12px',\n                maxHeight: '200px',\n                overflow: 'auto'\n              }}>\n                {JSON.stringify(JSON.parse(selectedLog.jsonResult || '{}'), null, 2)}\n              </pre>\n            </Descriptions.Item>\n            {selectedLog.errorMsg && (\n              <Descriptions.Item label=\"Error Message\" span={2}>\n                <div style={{ color: 'red' }}>{selectedLog.errorMsg}</div>\n              </Descriptions.Item>\n            )}\n          </Descriptions>\n        </Modal>\n      )}\n    </div>\n  );\n};\n\nexport default OperationLogs;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}