{"ast":null,"code":"var _jsxFileName = \"/Users/mariamagera/Downloads/serat/frontend/src/context/AuthContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState, useEffect } from 'react';\nimport Cookies from 'js-cookie';\nimport { authAPI } from '../services/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\nexport const useAuth = () => {\n  _s();\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n_s(useAuth, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nexport const AuthProvider = ({\n  children\n}) => {\n  _s2();\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    checkAuthStatus();\n  }, []);\n  const checkAuthStatus = async () => {\n    const token = Cookies.get('Admin-Token');\n    if (token) {\n      try {\n        // Verify token by getting user info\n        const response = await authAPI.getUserInfo();\n        if (response.data.code === 200) {\n          setIsAuthenticated(true);\n          setUser(response.data.user);\n        } else {\n          // Token is invalid, remove it\n          Cookies.remove('Admin-Token');\n        }\n      } catch (error) {\n        console.error('Auth check failed:', error);\n        Cookies.remove('Admin-Token');\n      }\n    }\n    setLoading(false);\n  };\n  const login = async token => {\n    try {\n      // Set token in cookies\n      Cookies.set('Admin-Token', token, {\n        expires: 7\n      }); // 7 days\n\n      // Get user info\n      const response = await authAPI.getUserInfo();\n      if (response.data.code === 200) {\n        setUser(response.data.user);\n        setIsAuthenticated(true);\n        return true;\n      } else {\n        throw new Error('Failed to get user info');\n      }\n    } catch (error) {\n      console.error('Login failed:', error);\n      Cookies.remove('Admin-Token');\n      throw error;\n    }\n  };\n  const logout = async () => {\n    try {\n      // Call logout API (if exists)\n      // await authAPI.logout();\n    } catch (error) {\n      console.error('Logout API failed:', error);\n    } finally {\n      // Clear local state regardless of API call result\n      Cookies.remove('Admin-Token');\n      setIsAuthenticated(false);\n      setUser(null);\n    }\n  };\n  const updateUser = async () => {\n    try {\n      const response = await authAPI.getUserInfo();\n      if (response.data.code === 200) {\n        setUser(response.data.user);\n      }\n    } catch (error) {\n      console.error('Failed to update user info:', error);\n    }\n  };\n  const value = {\n    isAuthenticated,\n    user,\n    loading,\n    login,\n    logout,\n    updateUser\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 12\n    }, this); // You can replace this with a proper loading component\n  }\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 105,\n    columnNumber: 5\n  }, this);\n};\n_s2(AuthProvider, \"mKb+zX9grAar2iMVStuBBwt7fpw=\");\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","Cookies","authAPI","jsxDEV","_jsxDEV","AuthContext","useAuth","_s","context","Error","AuthProvider","children","_s2","isAuthenticated","setIsAuthenticated","user","setUser","loading","setLoading","checkAuthStatus","token","get","response","getUserInfo","data","code","remove","error","console","login","set","expires","logout","updateUser","value","fileName","_jsxFileName","lineNumber","columnNumber","Provider","_c","$RefreshReg$"],"sources":["/Users/mariamagera/Downloads/serat/frontend/src/context/AuthContext.js"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect } from 'react';\nimport Cookies from 'js-cookie';\nimport { authAPI } from '../services/api';\n\nconst AuthContext = createContext();\n\nexport const useAuth = () => {\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n\nexport const AuthProvider = ({ children }) => {\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    checkAuthStatus();\n  }, []);\n\n  const checkAuthStatus = async () => {\n    const token = Cookies.get('Admin-Token');\n    if (token) {\n      try {\n        // Verify token by getting user info\n        const response = await authAPI.getUserInfo();\n        if (response.data.code === 200) {\n          setIsAuthenticated(true);\n          setUser(response.data.user);\n        } else {\n          // Token is invalid, remove it\n          Cookies.remove('Admin-Token');\n        }\n      } catch (error) {\n        console.error('Auth check failed:', error);\n        Cookies.remove('Admin-Token');\n      }\n    }\n    setLoading(false);\n  };\n\n  const login = async (token) => {\n    try {\n      // Set token in cookies\n      Cookies.set('Admin-Token', token, { expires: 7 }); // 7 days\n      \n      // Get user info\n      const response = await authAPI.getUserInfo();\n      if (response.data.code === 200) {\n        setUser(response.data.user);\n        setIsAuthenticated(true);\n        return true;\n      } else {\n        throw new Error('Failed to get user info');\n      }\n    } catch (error) {\n      console.error('Login failed:', error);\n      Cookies.remove('Admin-Token');\n      throw error;\n    }\n  };\n\n  const logout = async () => {\n    try {\n      // Call logout API (if exists)\n      // await authAPI.logout();\n    } catch (error) {\n      console.error('Logout API failed:', error);\n    } finally {\n      // Clear local state regardless of API call result\n      Cookies.remove('Admin-Token');\n      setIsAuthenticated(false);\n      setUser(null);\n    }\n  };\n\n  const updateUser = async () => {\n    try {\n      const response = await authAPI.getUserInfo();\n      if (response.data.code === 200) {\n        setUser(response.data.user);\n      }\n    } catch (error) {\n      console.error('Failed to update user info:', error);\n    }\n  };\n\n  const value = {\n    isAuthenticated,\n    user,\n    loading,\n    login,\n    logout,\n    updateUser,\n  };\n\n  if (loading) {\n    return <div>Loading...</div>; // You can replace this with a proper loading component\n  }\n\n  return (\n    <AuthContext.Provider value={value}>\n      {children}\n    </AuthContext.Provider>\n  );\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}