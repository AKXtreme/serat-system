{"version":3,"file":"static/js/735.03890347.chunk.js","mappings":"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","sources":["components/System/PositionManagement.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport {\n  Card,\n  Table,\n  Button,\n  Space,\n  Input,\n  Modal,\n  Form,\n  message,\n  Popconfirm,\n  Tag,\n  Row,\n  Col,\n  Select,\n  InputNumber,\n  Upload,\n  Divider\n} from 'antd';\nimport {\n  PlusOutlined,\n  EditOutlined,\n  DeleteOutlined,\n  ReloadOutlined,\n  DownloadOutlined,\n  UploadOutlined,\n  UserOutlined,\n  TeamOutlined\n} from '@ant-design/icons';\nimport { systemAPI } from '../../services/api';\n\nconst { Search } = Input;\nconst { Option } = Select;\n\nconst PositionManagement = () => {\n  const [positions, setPositions] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [modalVisible, setModalVisible] = useState(false);\n  const [modalType, setModalType] = useState('add');\n  const [selectedPosition, setSelectedPosition] = useState(null);\n  const [searchValue, setSearchValue] = useState('');\n  const [form] = Form.useForm();\n\n  useEffect(() => {\n    fetchPositions();\n  }, []);\n\n  const fetchPositions = async () => {\n    setLoading(true);\n    try {\n      const response = await systemAPI.getPositions();\n      if (response.data.code === 200) {\n        setPositions(response.data.rows || []);\n      }\n    } catch (error) {\n      message.error('Failed to fetch positions');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleAdd = () => {\n    setModalType('add');\n    setSelectedPosition(null);\n    form.resetFields();\n    form.setFieldsValue({\n      status: '0',\n      postSort: 0,\n    });\n    setModalVisible(true);\n  };\n\n  const handleEdit = (record) => {\n    setModalType('edit');\n    setSelectedPosition(record);\n    form.setFieldsValue({\n      ...record,\n    });\n    setModalVisible(true);\n  };\n\n  const handleDelete = async (postId) => {\n    try {\n      const response = await systemAPI.deletePosition(postId);\n      if (response.data.code === 200) {\n        message.success('Position deleted successfully');\n        fetchPositions();\n      } else {\n        message.error(response.data.msg || 'Failed to delete position');\n      }\n    } catch (error) {\n      message.error('Failed to delete position');\n    }\n  };\n\n  const handleBatchDelete = async (postIds) => {\n    try {\n      const response = await systemAPI.deletePositions(postIds);\n      if (response.data.code === 200) {\n        message.success('Positions deleted successfully');\n        fetchPositions();\n      } else {\n        message.error(response.data.msg || 'Failed to delete positions');\n      }\n    } catch (error) {\n      message.error('Failed to delete positions');\n    }\n  };\n\n  const handleModalOk = async () => {\n    try {\n      const values = await form.validateFields();\n      const positionData = {\n        ...values,\n        postId: modalType === 'edit' ? selectedPosition.postId : undefined,\n      };\n\n      let response;\n      if (modalType === 'add') {\n        response = await systemAPI.createPosition(positionData);\n      } else {\n        response = await systemAPI.updatePosition(positionData);\n      }\n\n      if (response.data.code === 200) {\n        message.success(`Position ${modalType === 'add' ? 'created' : 'updated'} successfully`);\n        setModalVisible(false);\n        fetchPositions();\n      } else {\n        message.error(response.data.msg || `Failed to ${modalType} position`);\n      }\n    } catch (error) {\n      message.error(`Failed to ${modalType} position`);\n    }\n  };\n\n  const handleExport = async () => {\n    try {\n      const response = await systemAPI.exportPositions();\n      // Handle file download\n      const url = window.URL.createObjectURL(new Blob([response.data]));\n      const link = document.createElement('a');\n      link.href = url;\n      link.setAttribute('download', 'positions.xlsx');\n      document.body.appendChild(link);\n      link.click();\n      link.remove();\n      message.success('Export successful');\n    } catch (error) {\n      message.error('Export failed');\n    }\n  };\n\n  const uploadProps = {\n    name: 'file',\n    action: '/api/system/post/importData',\n    headers: {\n      authorization: `Bearer ${localStorage.getItem('token')}`,\n    },\n    onChange(info) {\n      if (info.file.status === 'done') {\n        message.success(`${info.file.name} file uploaded successfully`);\n        fetchPositions();\n      } else if (info.file.status === 'error') {\n        message.error(`${info.file.name} file upload failed.`);\n      }\n    },\n  };\n\n  const filteredPositions = positions.filter(position => {\n    if (!searchValue) return true;\n    return (\n      position.postName.toLowerCase().includes(searchValue.toLowerCase()) ||\n      position.postCode.toLowerCase().includes(searchValue.toLowerCase())\n    );\n  });\n\n  const columns = [\n    {\n      title: 'Position ID',\n      dataIndex: 'postId',\n      key: 'postId',\n      width: 100,\n    },\n    {\n      title: 'Position Code',\n      dataIndex: 'postCode',\n      key: 'postCode',\n      render: (text) => <Tag color=\"blue\">{text}</Tag>,\n    },\n    {\n      title: 'Position Name',\n      dataIndex: 'postName',\n      key: 'postName',\n      render: (text) => (\n        <Space>\n          <UserOutlined style={{ color: '#1890ff' }} />\n          {text}\n        </Space>\n      ),\n    },\n    {\n      title: 'Display Order',\n      dataIndex: 'postSort',\n      key: 'postSort',\n      width: 120,\n      sorter: (a, b) => a.postSort - b.postSort,\n    },\n    {\n      title: 'Status',\n      dataIndex: 'status',\n      key: 'status',\n      render: (status) => (\n        <Tag color={status === '0' ? 'green' : 'red'}>\n          {status === '0' ? 'Normal' : 'Disabled'}\n        </Tag>\n      ),\n    },\n    {\n      title: 'Create Time',\n      dataIndex: 'createTime',\n      key: 'createTime',\n      width: 180,\n    },\n    {\n      title: 'Remark',\n      dataIndex: 'remark',\n      key: 'remark',\n      ellipsis: true,\n      render: (text) => text || '-',\n    },\n    {\n      title: 'Actions',\n      key: 'actions',\n      width: 200,\n      render: (_, record) => (\n        <Space size=\"small\">\n          <Button\n            type=\"link\"\n            icon={<EditOutlined />}\n            onClick={() => handleEdit(record)}\n          >\n            Edit\n          </Button>\n          <Popconfirm\n            title=\"Delete Position\"\n            description=\"Are you sure you want to delete this position?\"\n            onConfirm={() => handleDelete(record.postId)}\n            okText=\"Yes\"\n            cancelText=\"No\"\n          >\n            <Button type=\"link\" danger icon={<DeleteOutlined />}>\n              Delete\n            </Button>\n          </Popconfirm>\n        </Space>\n      ),\n    },\n  ];\n\n  const [selectedRowKeys, setSelectedRowKeys] = useState([]);\n  const rowSelection = {\n    selectedRowKeys,\n    onChange: setSelectedRowKeys,\n  };\n\n  return (\n    <div>\n      <Card title=\"Position Management\" style={{ marginBottom: 16 }}>\n        <Row gutter={[16, 16]} justify=\"space-between\" align=\"middle\">\n          <Col span={8}>\n            <Search\n              placeholder=\"Search positions\"\n              value={searchValue}\n              onChange={(e) => setSearchValue(e.target.value)}\n              style={{ width: '100%' }}\n            />\n          </Col>\n          <Col>\n            <Space>\n              <Button\n                type=\"primary\"\n                icon={<PlusOutlined />}\n                onClick={handleAdd}\n              >\n                Add Position\n              </Button>\n              <Button\n                icon={<DownloadOutlined />}\n                onClick={handleExport}\n              >\n                Export\n              </Button>\n              <Upload {...uploadProps} showUploadList={false}>\n                <Button icon={<UploadOutlined />}>\n                  Import\n                </Button>\n              </Upload>\n              <Button\n                icon={<ReloadOutlined />}\n                onClick={fetchPositions}\n              >\n                Refresh\n              </Button>\n            </Space>\n          </Col>\n        </Row>\n        \n        {selectedRowKeys.length > 0 && (\n          <Row style={{ marginTop: 16 }}>\n            <Col>\n              <Space>\n                <span>Selected {selectedRowKeys.length} items</span>\n                <Button\n                  type=\"primary\"\n                  danger\n                  size=\"small\"\n                  onClick={() => handleBatchDelete(selectedRowKeys)}\n                >\n                  Batch Delete\n                </Button>\n                <Button\n                  size=\"small\"\n                  onClick={() => setSelectedRowKeys([])}\n                >\n                  Clear Selection\n                </Button>\n              </Space>\n            </Col>\n          </Row>\n        )}\n      </Card>\n\n      <Card>\n        <Table\n          columns={columns}\n          dataSource={filteredPositions}\n          rowKey=\"postId\"\n          loading={loading}\n          rowSelection={rowSelection}\n          pagination={{\n            pageSize: 10,\n            showSizeChanger: true,\n            showQuickJumper: true,\n            showTotal: (total, range) =>\n              `${range[0]}-${range[1]} of ${total} items`,\n          }}\n        />\n      </Card>\n\n      <Modal\n        title={modalType === 'add' ? 'Add Position' : 'Edit Position'}\n        visible={modalVisible}\n        onOk={handleModalOk}\n        onCancel={() => setModalVisible(false)}\n        width={600}\n        okText={modalType === 'add' ? 'Create' : 'Update'}\n      >\n        <Form\n          form={form}\n          layout=\"vertical\"\n          initialValues={{\n            status: '0',\n            postSort: 0,\n          }}\n        >\n          <Row gutter={16}>\n            <Col span={12}>\n              <Form.Item\n                name=\"postName\"\n                label=\"Position Name\"\n                rules={[\n                  { required: true, message: 'Please input position name!' },\n                  { min: 2, max: 50, message: 'Position name must be 2-50 characters!' },\n                ]}\n              >\n                <Input placeholder=\"Enter position name\" />\n              </Form.Item>\n            </Col>\n            <Col span={12}>\n              <Form.Item\n                name=\"postCode\"\n                label=\"Position Code\"\n                rules={[\n                  { required: true, message: 'Please input position code!' },\n                  { min: 2, max: 64, message: 'Position code must be 2-64 characters!' },\n                  { pattern: /^[a-zA-Z0-9_]+$/, message: 'Position code can only contain letters, numbers, and underscores!' },\n                ]}\n              >\n                <Input placeholder=\"Enter position code\" />\n              </Form.Item>\n            </Col>\n          </Row>\n\n          <Row gutter={16}>\n            <Col span={12}>\n              <Form.Item\n                name=\"postSort\"\n                label=\"Display Order\"\n                rules={[\n                  { required: true, message: 'Please input display order!' },\n                ]}\n              >\n                <InputNumber\n                  min={0}\n                  max={9999}\n                  placeholder=\"Enter display order\"\n                  style={{ width: '100%' }}\n                />\n              </Form.Item>\n            </Col>\n            <Col span={12}>\n              <Form.Item\n                name=\"status\"\n                label=\"Status\"\n              >\n                <Select>\n                  <Option value=\"0\">Normal</Option>\n                  <Option value=\"1\">Disabled</Option>\n                </Select>\n              </Form.Item>\n            </Col>\n          </Row>\n\n          <Row gutter={16}>\n            <Col span={24}>\n              <Form.Item\n                name=\"remark\"\n                label=\"Remark\"\n              >\n                <Input.TextArea\n                  rows={4}\n                  placeholder=\"Enter remark (optional)\"\n                  maxLength={500}\n                />\n              </Form.Item>\n            </Col>\n          </Row>\n        </Form>\n      </Modal>\n    </div>\n  );\n};\n\nexport default PositionManagement;\n"],"names":["Search","Input","Option","Select","PositionManagement","positions","setPositions","useState","loading","setLoading","modalVisible","setModalVisible","modalType","setModalType","selectedPosition","setSelectedPosition","searchValue","setSearchValue","form","Form","useForm","useEffect","fetchPositions","async","response","systemAPI","getPositions","data","code","rows","error","message","uploadProps","name","action","headers","authorization","localStorage","getItem","onChange","info","file","status","success","filteredPositions","filter","position","postName","toLowerCase","includes","postCode","columns","title","dataIndex","key","width","render","text","_jsx","Tag","color","children","_jsxs","Space","UserOutlined","style","sorter","a","b","postSort","ellipsis","_","record","size","Button","type","icon","EditOutlined","onClick","setFieldsValue","handleEdit","Popconfirm","description","onConfirm","deletePosition","postId","msg","handleDelete","okText","cancelText","danger","DeleteOutlined","selectedRowKeys","setSelectedRowKeys","rowSelection","Card","marginBottom","Row","gutter","justify","align","Col","span","placeholder","value","e","target","PlusOutlined","handleAdd","resetFields","DownloadOutlined","exportPositions","url","window","URL","createObjectURL","Blob","link","document","createElement","href","setAttribute","body","appendChild","click","remove","Upload","showUploadList","UploadOutlined","ReloadOutlined","length","marginTop","deletePositions","postIds","handleBatchDelete","Table","dataSource","rowKey","pagination","pageSize","showSizeChanger","showQuickJumper","showTotal","total","range","Modal","visible","onOk","positionData","validateFields","undefined","createPosition","updatePosition","onCancel","layout","initialValues","Item","label","rules","required","min","max","pattern","InputNumber","TextArea","maxLength"],"sourceRoot":""}