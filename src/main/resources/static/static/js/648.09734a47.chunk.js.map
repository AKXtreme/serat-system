{"version":3,"file":"static/js/648.09734a47.chunk.js","mappings":"mXA6BA,MAAM,OAAEA,GAAWC,EAAAA,GACb,OAAEC,GAAWC,EAAAA,EAsanB,EApauBC,KACrB,MAAOC,EAAOC,IAAYC,EAAAA,EAAAA,UAAS,KAC5BC,EAAOC,IAAYF,EAAAA,EAAAA,UAAS,KAC5BG,EAASC,IAAcJ,EAAAA,EAAAA,WAAS,IAChCK,EAAYC,IAAiBN,EAAAA,EAAAA,UAAS,CAC3CO,QAAS,EACTC,SAAU,GACVC,MAAO,KAEFC,EAAcC,IAAmBX,EAAAA,EAAAA,UAAS,CAAC,IAC3CY,EAAcC,IAAmBb,EAAAA,EAAAA,WAAS,IAC1Cc,EAAwBC,IAA6Bf,EAAAA,EAAAA,WAAS,IAC9DgB,EAAWC,IAAgBjB,EAAAA,EAAAA,UAAS,QACpCkB,EAAcC,IAAmBnB,EAAAA,EAAAA,UAAS,OAC1CoB,EAAkBC,IAAuBrB,EAAAA,EAAAA,UAAS,KAClDsB,GAAQC,EAAAA,EAAKC,WAEpBC,EAAAA,EAAAA,WAAU,KACRC,IACAC,KACC,CAACtB,EAAWE,QAASF,EAAWG,SAAUE,IAE7C,MAAMgB,EAAaE,UACjBxB,GAAW,GACX,IACE,MAAMyB,QAAiBC,EAAAA,GAAUC,SAAS,CACxCC,QAAS3B,EAAWE,QACpBC,SAAUH,EAAWG,YAClBE,IAGsB,MAAvBmB,EAASI,KAAKC,OAChBnC,EAAS8B,EAASI,KAAKE,MAAQ,IAC/B7B,EAAc8B,IAAI,IACbA,EACH3B,MAAOoB,EAASI,KAAKxB,OAAS,KAGpC,CAAE,MAAO4B,GACPC,EAAAA,GAAQD,MAAM,wBAChB,CAAC,QACCjC,GAAW,EACb,GAGIuB,EAAaC,UACjB,IACE,MAAMC,QAAiBC,EAAAA,GAAUS,WACN,MAAvBV,EAASI,KAAKC,MAChBhC,EAAS2B,EAASI,KAAKA,MAAQ,GAEnC,CAAE,MAAOI,GACPG,QAAQH,MAAM,yBAA0BA,EAC1C,GA4FII,EAAgB,SAACxC,GAAyB,IAAlByC,EAAQC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,EACvC,OAAO1C,EACJ6C,OAAOC,GAAQA,EAAKL,WAAaA,GACjCM,IAAID,IAAI,CACPE,MAAOF,EAAKG,SACZC,IAAKJ,EAAKK,OACVC,SAAUZ,EAAcxC,EAAO8C,EAAKK,UAE1C,EAEME,EAAU,CACd,CACEL,MAAO,UACPM,UAAW,SACXJ,IAAK,SACLK,MAAO,IAET,CACEP,MAAO,YACPM,UAAW,WACXJ,IAAK,WACLM,OAASC,IACPC,EAAAA,EAAAA,MAACC,EAAAA,EAAK,CAAAP,SAAA,EACJQ,EAAAA,EAAAA,KAACC,EAAAA,EAAyB,IACzBJ,MAIP,CACET,MAAO,WACPM,UAAW,UACXJ,IAAK,UACLM,OAASC,IAASG,EAAAA,EAAAA,KAACE,EAAAA,EAAG,CAACC,MAAM,OAAMX,SAAEK,KAEvC,CACET,MAAO,aACPM,UAAW,WACXJ,IAAK,WACLK,MAAO,KAET,CACEP,MAAO,aACPM,UAAW,YACXJ,IAAK,YACLM,OAASQ,IAQAJ,EAAAA,EAAAA,KAACE,EAAAA,EAAG,CAACC,MAAM,QAAOX,SAPR,CACf,EAAK,WACL,EAAK,cACL,EAAK,kBACL,EAAK,qCACL,EAAK,sBAE6BY,IAAc,aAGtD,CACEhB,MAAO,SACPM,UAAW,SACXJ,IAAK,SACLM,OAASS,IACPL,EAAAA,EAAAA,KAACE,EAAAA,EAAG,CAACC,MAAkB,MAAXE,EAAiB,QAAU,MAAMb,SAC/B,MAAXa,EAAiB,SAAW,cAInC,CACEjB,MAAO,cACPM,UAAW,aACXJ,IAAK,aACLK,MAAO,KAET,CACEP,MAAO,UACPE,IAAK,UACLK,MAAO,IACPC,OAAQA,CAACU,EAAGC,KACVT,EAAAA,EAAAA,MAACC,EAAAA,EAAK,CAACS,KAAK,QAAOhB,SAAA,EACjBQ,EAAAA,EAAAA,KAACS,EAAAA,GAAM,CACLC,KAAK,OACLC,MAAMX,EAAAA,EAAAA,KAACY,EAAAA,EAAY,IACnBC,QAASA,IAzJCN,KAClBnD,EAAa,QACbE,EAAgBiD,GAChB9C,EAAKqD,eAAeP,GACpBvD,GAAgB,IAqJO+D,CAAWR,GAAQf,SACnC,UAGDQ,EAAAA,EAAAA,KAACS,EAAAA,GAAM,CACLC,KAAK,OACLC,MAAMX,EAAAA,EAAAA,KAACgB,EAAAA,EAAY,IACnBH,QAASA,IA3IcN,KAC/BjD,EAAgBiD,GAChB/C,EAAoB+C,EAAOU,SAAW,IACtC/D,GAA0B,IAwIHgE,CAAwBX,GAAQf,SAChD,iBAGDQ,EAAAA,EAAAA,KAACmB,EAAAA,EAAU,CACT/B,MAAM,cACNgC,YAAY,6CACZC,UAAWA,IAhKAtD,WACnB,IACE,MAAMC,QAAiBC,EAAAA,GAAUqD,WAAWC,GACjB,MAAvBvD,EAASI,KAAKC,MAChBI,EAAAA,GAAQ+C,QAAQ,6BAChB3D,KAEAY,EAAAA,GAAQD,MAAMR,EAASI,KAAKqD,KAAO,wBAEvC,CAAE,MAAOjD,GACPC,EAAAA,GAAQD,MAAM,wBAChB,GAqJyBkD,CAAanB,EAAOgB,QACrCI,OAAO,MACPC,WAAW,KAAIpC,UAEfQ,EAAAA,EAAAA,KAACS,EAAAA,GAAM,CAACC,KAAK,OAAOmB,QAAM,EAAClB,MAAMX,EAAAA,EAAAA,KAAC8B,EAAAA,EAAc,IAAItC,SAAC,kBAS/D,OACEM,EAAAA,EAAAA,MAAA,OAAAN,SAAA,EACEQ,EAAAA,EAAAA,KAAC+B,EAAAA,EAAI,CAAC3C,MAAM,kBAAkB4C,MAAO,CAAEC,aAAc,IAAKzC,UACxDM,EAAAA,EAAAA,MAACoC,EAAAA,EAAG,CAACC,OAAQ,CAAC,GAAI,IAAKC,QAAQ,gBAAgBC,MAAM,SAAQ7C,SAAA,EAC3DQ,EAAAA,EAAAA,KAACsC,EAAAA,EAAG,CAACC,KAAM,EAAE/C,UACXQ,EAAAA,EAAAA,KAACpE,EAAM,CACL4G,YAAY,sBACZC,SA3MUC,IACpB5F,EAAgB,CAAE6F,SAAUD,IAC5BjG,EAAc8B,IAAI,IAAUA,EAAM7B,QAAS,MA0MjCsF,MAAO,CAAErC,MAAO,aAGpBK,EAAAA,EAAAA,KAACsC,EAAAA,EAAG,CAAA9C,UACFM,EAAAA,EAAAA,MAACC,EAAAA,EAAK,CAAAP,SAAA,EACJQ,EAAAA,EAAAA,KAACS,EAAAA,GAAM,CACLC,KAAK,UACLC,MAAMX,EAAAA,EAAAA,KAAC4C,EAAAA,EAAY,IACnB/B,QA3MIgC,KAChBzF,EAAa,OACbE,EAAgB,MAChBG,EAAKqF,cACL9F,GAAgB,IAuMewC,SACpB,cAGDQ,EAAAA,EAAAA,KAACS,EAAAA,GAAM,CACLE,MAAMX,EAAAA,EAAAA,KAAC+C,EAAAA,EAAc,IACrBlC,QAAShD,EAAW2B,SACrB,uBAQTQ,EAAAA,EAAAA,KAAC+B,EAAAA,EAAI,CAAAvC,UACHQ,EAAAA,EAAAA,KAACgD,EAAAA,EAAK,CACJvD,QAASA,EACTwD,WAAYhH,EACZiH,OAAO,SACP5G,QAASA,EACTE,WAAY,IACPA,EACH2G,iBAAiB,EACjBC,iBAAiB,EACjBC,UAAWA,CAACzG,EAAO0G,IACjB,GAAGA,EAAM,MAAMA,EAAM,SAAS1G,WAElC2G,SA3OmB/G,IACzBC,EAAcD,SA+OZwD,EAAAA,EAAAA,KAACwD,EAAAA,EAAK,CACJpE,MAAqB,QAAdjC,EAAsB,WAAa,YAC1CsG,QAAS1G,EACT2G,KA7MgB3F,UACpB,IACE,MACM4F,EAAW,UADIlG,EAAKmG,iBAGxBrC,OAAsB,SAAdpE,EAAuBE,EAAakE,YAASvC,GAGvD,IAAIhB,EAEFA,EADgB,QAAdb,QACec,EAAAA,GAAU4F,WAAWF,SAErB1F,EAAAA,GAAU6F,WAAWH,GAGb,MAAvB3F,EAASI,KAAKC,MAChBI,EAAAA,GAAQ+C,QAAQ,QAAsB,QAAdrE,EAAsB,UAAY,0BAC1DH,GAAgB,GAChBa,KAEAY,EAAAA,GAAQD,MAAMR,EAASI,KAAKqD,KAAO,aAAatE,SAEpD,CAAE,MAAOqB,GACPC,EAAAA,GAAQD,MAAM,aAAarB,SAC7B,GAsLI4G,SAAUA,IAAM/G,GAAgB,GAChC2C,MAAO,IACPgC,OAAsB,QAAdxE,EAAsB,SAAW,SAASqC,UAElDM,EAAAA,EAAAA,MAACpC,EAAAA,EAAI,CACHD,KAAMA,EACNuG,OAAO,WACPC,cAAe,CACb5D,OAAQ,IACRD,UAAW,IACX8D,mBAAmB,EACnBC,mBAAmB,GACnB3E,SAAA,EAEFM,EAAAA,EAAAA,MAACoC,EAAAA,EAAG,CAACC,OAAQ,GAAG3C,SAAA,EACdQ,EAAAA,EAAAA,KAACsC,EAAAA,EAAG,CAACC,KAAM,GAAG/C,UACZQ,EAAAA,EAAAA,KAACtC,EAAAA,EAAK0G,KAAI,CACRC,KAAK,WACLC,MAAM,YACNC,MAAO,CACL,CAAEC,UAAU,EAAM/F,QAAS,4BAC3Be,UAEFQ,EAAAA,EAAAA,KAACnE,EAAAA,EAAK,CAAC2G,YAAY,yBAGvBxC,EAAAA,EAAAA,KAACsC,EAAAA,EAAG,CAACC,KAAM,GAAG/C,UACZQ,EAAAA,EAAAA,KAACtC,EAAAA,EAAK0G,KAAI,CACRC,KAAK,UACLC,MAAM,WACNC,MAAO,CACL,CAAEC,UAAU,EAAM/F,QAAS,2BAC3Be,UAEFQ,EAAAA,EAAAA,KAACnE,EAAAA,EAAK,CAAC2G,YAAY,2BAKzB1C,EAAAA,EAAAA,MAACoC,EAAAA,EAAG,CAACC,OAAQ,GAAG3C,SAAA,EACdQ,EAAAA,EAAAA,KAACsC,EAAAA,EAAG,CAACC,KAAM,GAAG/C,UACZQ,EAAAA,EAAAA,KAACtC,EAAAA,EAAK0G,KAAI,CACRC,KAAK,WACLC,MAAM,aACNC,MAAO,CACL,CAAEC,UAAU,EAAM/F,QAAS,6BAC3Be,UAEFQ,EAAAA,EAAAA,KAACnE,EAAAA,EAAK,CAAC6E,KAAK,SAAS8B,YAAY,0BAGrCxC,EAAAA,EAAAA,KAACsC,EAAAA,EAAG,CAACC,KAAM,GAAG/C,UACZQ,EAAAA,EAAAA,KAACtC,EAAAA,EAAK0G,KAAI,CACRC,KAAK,SACLC,MAAM,SAAQ9E,UAEdM,EAAAA,EAAAA,MAAC/D,EAAAA,EAAM,CAAAyD,SAAA,EACLQ,EAAAA,EAAAA,KAAClE,EAAM,CAAC4G,MAAM,IAAGlD,SAAC,YAClBQ,EAAAA,EAAAA,KAAClE,EAAM,CAAC4G,MAAM,IAAGlD,SAAC,wBAM1BQ,EAAAA,EAAAA,KAACkC,EAAAA,EAAG,CAACC,OAAQ,GAAG3C,UACdQ,EAAAA,EAAAA,KAACsC,EAAAA,EAAG,CAACC,KAAM,GAAG/C,UACZQ,EAAAA,EAAAA,KAACtC,EAAAA,EAAK0G,KAAI,CACRC,KAAK,YACLC,MAAM,aAAY9E,UAElBM,EAAAA,EAAAA,MAAC/D,EAAAA,EAAM,CAAAyD,SAAA,EACLQ,EAAAA,EAAAA,KAAClE,EAAM,CAAC4G,MAAM,IAAGlD,SAAC,cAClBQ,EAAAA,EAAAA,KAAClE,EAAM,CAAC4G,MAAM,IAAGlD,SAAC,iBAClBQ,EAAAA,EAAAA,KAAClE,EAAM,CAAC4G,MAAM,IAAGlD,SAAC,qBAClBQ,EAAAA,EAAAA,KAAClE,EAAM,CAAC4G,MAAM,IAAGlD,SAAC,wCAClBQ,EAAAA,EAAAA,KAAClE,EAAM,CAAC4G,MAAM,IAAGlD,SAAC,iCAM1BQ,EAAAA,EAAAA,KAACkC,EAAAA,EAAG,CAACC,OAAQ,GAAG3C,UACdQ,EAAAA,EAAAA,KAACsC,EAAAA,EAAG,CAACC,KAAM,GAAG/C,UACZQ,EAAAA,EAAAA,KAACtC,EAAAA,EAAK0G,KAAI,CACRC,KAAK,SACLC,MAAM,SAAQ9E,UAEdQ,EAAAA,EAAAA,KAACnE,EAAAA,EAAM4I,SAAQ,CAACnG,KAAM,EAAGkE,YAAY,6BAQ/CxC,EAAAA,EAAAA,KAACwD,EAAAA,EAAK,CACJpE,MAAO,wBAAoC,OAAZ/B,QAAY,IAAZA,OAAY,EAAZA,EAAcsF,WAC7Cc,QAASxG,EACTyG,KArRqB3F,UACzB,IACE,MAAMC,QAAiBC,EAAAA,GAAUyG,gBAAgB,CAC/CnD,OAAQlE,EAAakE,OACrBN,QAAS1D,IAGgB,MAAvBS,EAASI,KAAKC,MAChBI,EAAAA,GAAQ+C,QAAQ,oCAChBtE,GAA0B,GAC1BW,KAEAY,EAAAA,GAAQD,MAAMR,EAASI,KAAKqD,KAAO,+BAEvC,CAAE,MAAOjD,GACPC,EAAAA,GAAQD,MAAM,+BAChB,GAsQIuF,SAAUA,IAAM7G,GAA0B,GAC1CyC,MAAO,IACPgC,OAAO,mBAAkBnC,UAEzBQ,EAAAA,EAAAA,KAAC2E,EAAAA,EAAI,CACHC,WAAS,EACTC,YAAatH,EACbuH,QAAStH,EACTuH,SAAUnG,EAAcxC,GACxB4I,OAAQ,W","sources":["components/System/RoleManagement.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport {\n  Card,\n  Table,\n  Button,\n  Space,\n  Input,\n  Modal,\n  Form,\n  message,\n  Popconfirm,\n  Tag,\n  Row,\n  Col,\n  Select,\n  Switch,\n  Tree\n} from 'antd';\nimport {\n  PlusOutlined,\n  EditOutlined,\n  DeleteOutlined,\n  SearchOutlined,\n  ReloadOutlined,\n  SafetyCertificateOutlined,\n  UserOutlined\n} from '@ant-design/icons';\nimport { systemAPI } from '../../services/api';\n\nconst { Search } = Input;\nconst { Option } = Select;\n\nconst RoleManagement = () => {\n  const [roles, setRoles] = useState([]);\n  const [menus, setMenus] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [pagination, setPagination] = useState({\n    current: 1,\n    pageSize: 10,\n    total: 0,\n  });\n  const [searchParams, setSearchParams] = useState({});\n  const [modalVisible, setModalVisible] = useState(false);\n  const [permissionModalVisible, setPermissionModalVisible] = useState(false);\n  const [modalType, setModalType] = useState('add');\n  const [selectedRole, setSelectedRole] = useState(null);\n  const [selectedMenuKeys, setSelectedMenuKeys] = useState([]);\n  const [form] = Form.useForm();\n\n  useEffect(() => {\n    fetchRoles();\n    fetchMenus();\n  }, [pagination.current, pagination.pageSize, searchParams]);\n\n  const fetchRoles = async () => {\n    setLoading(true);\n    try {\n      const response = await systemAPI.getRoles({\n        pageNum: pagination.current,\n        pageSize: pagination.pageSize,\n        ...searchParams,\n      });\n      \n      if (response.data.code === 200) {\n        setRoles(response.data.rows || []);\n        setPagination(prev => ({\n          ...prev,\n          total: response.data.total || 0,\n        }));\n      }\n    } catch (error) {\n      message.error('Failed to fetch roles');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const fetchMenus = async () => {\n    try {\n      const response = await systemAPI.getMenus();\n      if (response.data.code === 200) {\n        setMenus(response.data.data || []);\n      }\n    } catch (error) {\n      console.error('Failed to fetch menus:', error);\n    }\n  };\n\n  const handleSearch = (value) => {\n    setSearchParams({ roleName: value });\n    setPagination(prev => ({ ...prev, current: 1 }));\n  };\n\n  const handleTableChange = (pagination) => {\n    setPagination(pagination);\n  };\n\n  const handleAdd = () => {\n    setModalType('add');\n    setSelectedRole(null);\n    form.resetFields();\n    setModalVisible(true);\n  };\n\n  const handleEdit = (record) => {\n    setModalType('edit');\n    setSelectedRole(record);\n    form.setFieldsValue(record);\n    setModalVisible(true);\n  };\n\n  const handleDelete = async (roleId) => {\n    try {\n      const response = await systemAPI.deleteRole(roleId);\n      if (response.data.code === 200) {\n        message.success('Role deleted successfully');\n        fetchRoles();\n      } else {\n        message.error(response.data.msg || 'Failed to delete role');\n      }\n    } catch (error) {\n      message.error('Failed to delete role');\n    }\n  };\n\n  const handleAssignPermissions = (record) => {\n    setSelectedRole(record);\n    setSelectedMenuKeys(record.menuIds || []);\n    setPermissionModalVisible(true);\n  };\n\n  const handleModalOk = async () => {\n    try {\n      const values = await form.validateFields();\n      const roleData = {\n        ...values,\n        roleId: modalType === 'edit' ? selectedRole.roleId : undefined,\n      };\n\n      let response;\n      if (modalType === 'add') {\n        response = await systemAPI.createRole(roleData);\n      } else {\n        response = await systemAPI.updateRole(roleData);\n      }\n\n      if (response.data.code === 200) {\n        message.success(`Role ${modalType === 'add' ? 'created' : 'updated'} successfully`);\n        setModalVisible(false);\n        fetchRoles();\n      } else {\n        message.error(response.data.msg || `Failed to ${modalType} role`);\n      }\n    } catch (error) {\n      message.error(`Failed to ${modalType} role`);\n    }\n  };\n\n  const handlePermissionOk = async () => {\n    try {\n      const response = await systemAPI.updateRoleMenus({\n        roleId: selectedRole.roleId,\n        menuIds: selectedMenuKeys,\n      });\n\n      if (response.data.code === 200) {\n        message.success('Permissions updated successfully');\n        setPermissionModalVisible(false);\n        fetchRoles();\n      } else {\n        message.error(response.data.msg || 'Failed to update permissions');\n      }\n    } catch (error) {\n      message.error('Failed to update permissions');\n    }\n  };\n\n  const buildMenuTree = (menus, parentId = 0) => {\n    return menus\n      .filter(menu => menu.parentId === parentId)\n      .map(menu => ({\n        title: menu.menuName,\n        key: menu.menuId,\n        children: buildMenuTree(menus, menu.menuId),\n      }));\n  };\n\n  const columns = [\n    {\n      title: 'Role ID',\n      dataIndex: 'roleId',\n      key: 'roleId',\n      width: 80,\n    },\n    {\n      title: 'Role Name',\n      dataIndex: 'roleName',\n      key: 'roleName',\n      render: (text) => (\n        <Space>\n          <SafetyCertificateOutlined />\n          {text}\n        </Space>\n      ),\n    },\n    {\n      title: 'Role Key',\n      dataIndex: 'roleKey',\n      key: 'roleKey',\n      render: (text) => <Tag color=\"blue\">{text}</Tag>,\n    },\n    {\n      title: 'Sort Order',\n      dataIndex: 'roleSort',\n      key: 'roleSort',\n      width: 100,\n    },\n    {\n      title: 'Data Scope',\n      dataIndex: 'dataScope',\n      key: 'dataScope',\n      render: (dataScope) => {\n        const scopeMap = {\n          '1': 'All data',\n          '2': 'Custom data',\n          '3': 'Department data',\n          '4': 'Department and sub-department data',\n          '5': 'Personal data only',\n        };\n        return <Tag color=\"green\">{scopeMap[dataScope] || 'Unknown'}</Tag>;\n      },\n    },\n    {\n      title: 'Status',\n      dataIndex: 'status',\n      key: 'status',\n      render: (status) => (\n        <Tag color={status === '0' ? 'green' : 'red'}>\n          {status === '0' ? 'Active' : 'Inactive'}\n        </Tag>\n      ),\n    },\n    {\n      title: 'Create Time',\n      dataIndex: 'createTime',\n      key: 'createTime',\n      width: 180,\n    },\n    {\n      title: 'Actions',\n      key: 'actions',\n      width: 300,\n      render: (_, record) => (\n        <Space size=\"small\">\n          <Button\n            type=\"link\"\n            icon={<EditOutlined />}\n            onClick={() => handleEdit(record)}\n          >\n            Edit\n          </Button>\n          <Button\n            type=\"link\"\n            icon={<UserOutlined />}\n            onClick={() => handleAssignPermissions(record)}\n          >\n            Permissions\n          </Button>\n          <Popconfirm\n            title=\"Delete Role\"\n            description=\"Are you sure you want to delete this role?\"\n            onConfirm={() => handleDelete(record.roleId)}\n            okText=\"Yes\"\n            cancelText=\"No\"\n          >\n            <Button type=\"link\" danger icon={<DeleteOutlined />}>\n              Delete\n            </Button>\n          </Popconfirm>\n        </Space>\n      ),\n    },\n  ];\n\n  return (\n    <div>\n      <Card title=\"Role Management\" style={{ marginBottom: 16 }}>\n        <Row gutter={[16, 16]} justify=\"space-between\" align=\"middle\">\n          <Col span={8}>\n            <Search\n              placeholder=\"Search by role name\"\n              onSearch={handleSearch}\n              style={{ width: '100%' }}\n            />\n          </Col>\n          <Col>\n            <Space>\n              <Button\n                type=\"primary\"\n                icon={<PlusOutlined />}\n                onClick={handleAdd}\n              >\n                Add Role\n              </Button>\n              <Button\n                icon={<ReloadOutlined />}\n                onClick={fetchRoles}\n              >\n                Refresh\n              </Button>\n            </Space>\n          </Col>\n        </Row>\n      </Card>\n\n      <Card>\n        <Table\n          columns={columns}\n          dataSource={roles}\n          rowKey=\"roleId\"\n          loading={loading}\n          pagination={{\n            ...pagination,\n            showSizeChanger: true,\n            showQuickJumper: true,\n            showTotal: (total, range) =>\n              `${range[0]}-${range[1]} of ${total} items`,\n          }}\n          onChange={handleTableChange}\n        />\n      </Card>\n\n      {/* Add/Edit Role Modal */}\n      <Modal\n        title={modalType === 'add' ? 'Add Role' : 'Edit Role'}\n        visible={modalVisible}\n        onOk={handleModalOk}\n        onCancel={() => setModalVisible(false)}\n        width={600}\n        okText={modalType === 'add' ? 'Create' : 'Update'}\n      >\n        <Form\n          form={form}\n          layout=\"vertical\"\n          initialValues={{\n            status: '0',\n            dataScope: '1',\n            menuCheckStrictly: true,\n            deptCheckStrictly: true,\n          }}\n        >\n          <Row gutter={16}>\n            <Col span={12}>\n              <Form.Item\n                name=\"roleName\"\n                label=\"Role Name\"\n                rules={[\n                  { required: true, message: 'Please input role name!' },\n                ]}\n              >\n                <Input placeholder=\"Enter role name\" />\n              </Form.Item>\n            </Col>\n            <Col span={12}>\n              <Form.Item\n                name=\"roleKey\"\n                label=\"Role Key\"\n                rules={[\n                  { required: true, message: 'Please input role key!' },\n                ]}\n              >\n                <Input placeholder=\"Enter role key\" />\n              </Form.Item>\n            </Col>\n          </Row>\n\n          <Row gutter={16}>\n            <Col span={12}>\n              <Form.Item\n                name=\"roleSort\"\n                label=\"Sort Order\"\n                rules={[\n                  { required: true, message: 'Please input sort order!' },\n                ]}\n              >\n                <Input type=\"number\" placeholder=\"Enter sort order\" />\n              </Form.Item>\n            </Col>\n            <Col span={12}>\n              <Form.Item\n                name=\"status\"\n                label=\"Status\"\n              >\n                <Select>\n                  <Option value=\"0\">Active</Option>\n                  <Option value=\"1\">Inactive</Option>\n                </Select>\n              </Form.Item>\n            </Col>\n          </Row>\n\n          <Row gutter={16}>\n            <Col span={24}>\n              <Form.Item\n                name=\"dataScope\"\n                label=\"Data Scope\"\n              >\n                <Select>\n                  <Option value=\"1\">All data</Option>\n                  <Option value=\"2\">Custom data</Option>\n                  <Option value=\"3\">Department data</Option>\n                  <Option value=\"4\">Department and sub-department data</Option>\n                  <Option value=\"5\">Personal data only</Option>\n                </Select>\n              </Form.Item>\n            </Col>\n          </Row>\n\n          <Row gutter={16}>\n            <Col span={24}>\n              <Form.Item\n                name=\"remark\"\n                label=\"Remark\"\n              >\n                <Input.TextArea rows={4} placeholder=\"Enter remark\" />\n              </Form.Item>\n            </Col>\n          </Row>\n        </Form>\n      </Modal>\n\n      {/* Permission Assignment Modal */}\n      <Modal\n        title={`Assign Permissions - ${selectedRole?.roleName}`}\n        visible={permissionModalVisible}\n        onOk={handlePermissionOk}\n        onCancel={() => setPermissionModalVisible(false)}\n        width={500}\n        okText=\"Save Permissions\"\n      >\n        <Tree\n          checkable\n          checkedKeys={selectedMenuKeys}\n          onCheck={setSelectedMenuKeys}\n          treeData={buildMenuTree(menus)}\n          height={400}\n        />\n      </Modal>\n    </div>\n  );\n};\n\nexport default RoleManagement;\n"],"names":["Search","Input","Option","Select","RoleManagement","roles","setRoles","useState","menus","setMenus","loading","setLoading","pagination","setPagination","current","pageSize","total","searchParams","setSearchParams","modalVisible","setModalVisible","permissionModalVisible","setPermissionModalVisible","modalType","setModalType","selectedRole","setSelectedRole","selectedMenuKeys","setSelectedMenuKeys","form","Form","useForm","useEffect","fetchRoles","fetchMenus","async","response","systemAPI","getRoles","pageNum","data","code","rows","prev","error","message","getMenus","console","buildMenuTree","parentId","arguments","length","undefined","filter","menu","map","title","menuName","key","menuId","children","columns","dataIndex","width","render","text","_jsxs","Space","_jsx","SafetyCertificateOutlined","Tag","color","dataScope","status","_","record","size","Button","type","icon","EditOutlined","onClick","setFieldsValue","handleEdit","UserOutlined","menuIds","handleAssignPermissions","Popconfirm","description","onConfirm","deleteRole","roleId","success","msg","handleDelete","okText","cancelText","danger","DeleteOutlined","Card","style","marginBottom","Row","gutter","justify","align","Col","span","placeholder","onSearch","value","roleName","PlusOutlined","handleAdd","resetFields","ReloadOutlined","Table","dataSource","rowKey","showSizeChanger","showQuickJumper","showTotal","range","onChange","Modal","visible","onOk","roleData","validateFields","createRole","updateRole","onCancel","layout","initialValues","menuCheckStrictly","deptCheckStrictly","Item","name","label","rules","required","TextArea","updateRoleMenus","Tree","checkable","checkedKeys","onCheck","treeData","height"],"sourceRoot":""}