{"version":3,"file":"static/js/126.48fb2ff2.chunk.js","mappings":"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","sources":["components/System/DepartmentManagement.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport {\n  Card,\n  Table,\n  Button,\n  Space,\n  Input,\n  Modal,\n  Form,\n  message,\n  Popconfirm,\n  Tag,\n  Row,\n  Col,\n  Select,\n  TreeSelect,\n  InputNumber\n} from 'antd';\nimport {\n  PlusOutlined,\n  EditOutlined,\n  DeleteOutlined,\n  ReloadOutlined,\n  BankOutlined,\n  TeamOutlined\n} from '@ant-design/icons';\nimport { systemAPI } from '../../services/api';\n\nconst { Search } = Input;\nconst { Option } = Select;\n\nconst DepartmentManagement = () => {\n  const [departments, setDepartments] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [modalVisible, setModalVisible] = useState(false);\n  const [modalType, setModalType] = useState('add');\n  const [selectedDept, setSelectedDept] = useState(null);\n  const [searchValue, setSearchValue] = useState('');\n  const [form] = Form.useForm();\n\n  useEffect(() => {\n    fetchDepartments();\n  }, []);\n\n  const fetchDepartments = async () => {\n    setLoading(true);\n    try {\n      const response = await systemAPI.getDepartments();\n      if (response.data.code === 200) {\n        setDepartments(response.data.data || []);\n      }\n    } catch (error) {\n      message.error('Failed to fetch departments');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleAdd = () => {\n    setModalType('add');\n    setSelectedDept(null);\n    form.resetFields();\n    setModalVisible(true);\n  };\n\n  const handleEdit = (record) => {\n    setModalType('edit');\n    setSelectedDept(record);\n    form.setFieldsValue({\n      ...record,\n      parentId: record.parentId === 0 ? undefined : record.parentId\n    });\n    setModalVisible(true);\n  };\n\n  const handleDelete = async (deptId) => {\n    try {\n      const response = await systemAPI.deleteDepartment(deptId);\n      if (response.data.code === 200) {\n        message.success('Department deleted successfully');\n        fetchDepartments();\n      } else {\n        message.error(response.data.msg || 'Failed to delete department');\n      }\n    } catch (error) {\n      message.error('Failed to delete department');\n    }\n  };\n\n  const handleModalOk = async () => {\n    try {\n      const values = await form.validateFields();\n      const deptData = {\n        ...values,\n        deptId: modalType === 'edit' ? selectedDept.deptId : undefined,\n        parentId: values.parentId || 0,\n      };\n\n      let response;\n      if (modalType === 'add') {\n        response = await systemAPI.createDepartment(deptData);\n      } else {\n        response = await systemAPI.updateDepartment(deptData);\n      }\n\n      if (response.data.code === 200) {\n        message.success(`Department ${modalType === 'add' ? 'created' : 'updated'} successfully`);\n        setModalVisible(false);\n        fetchDepartments();\n      } else {\n        message.error(response.data.msg || `Failed to ${modalType} department`);\n      }\n    } catch (error) {\n      message.error(`Failed to ${modalType} department`);\n    }\n  };\n\n  const buildTreeData = (departments, parentId = 0) => {\n    return departments\n      .filter(dept => dept.parentId === parentId)\n      .map(dept => ({\n        title: dept.deptName,\n        value: dept.deptId,\n        key: dept.deptId,\n        children: buildTreeData(departments, dept.deptId),\n      }));\n  };\n\n  const expandedRowRender = (record) => {\n    const children = departments.filter(dept => dept.parentId === record.deptId);\n    \n    if (children.length === 0) {\n      return <div style={{ padding: '8px 0', color: '#999' }}>No sub-departments</div>;\n    }\n\n    const childColumns = [\n      {\n        title: 'Department Name',\n        dataIndex: 'deptName',\n        key: 'deptName',\n        render: (text) => (\n          <Space>\n            <BankOutlined style={{ color: '#1890ff' }} />\n            {text}\n          </Space>\n        ),\n      },\n      {\n        title: 'Leader',\n        dataIndex: 'leader',\n        key: 'leader',\n      },\n      {\n        title: 'Phone',\n        dataIndex: 'phone',\n        key: 'phone',\n      },\n      {\n        title: 'Email',\n        dataIndex: 'email',\n        key: 'email',\n      },\n      {\n        title: 'Status',\n        dataIndex: 'status',\n        key: 'status',\n        render: (status) => (\n          <Tag color={status === '0' ? 'green' : 'red'}>\n            {status === '0' ? 'Active' : 'Inactive'}\n          </Tag>\n        ),\n      },\n      {\n        title: 'Actions',\n        key: 'actions',\n        width: 200,\n        render: (_, record) => (\n          <Space size=\"small\">\n            <Button\n              type=\"link\"\n              icon={<EditOutlined />}\n              onClick={() => handleEdit(record)}\n              size=\"small\"\n            >\n              Edit\n            </Button>\n            <Popconfirm\n              title=\"Delete Department\"\n              description=\"Are you sure you want to delete this department?\"\n              onConfirm={() => handleDelete(record.deptId)}\n              okText=\"Yes\"\n              cancelText=\"No\"\n            >\n              <Button type=\"link\" danger icon={<DeleteOutlined />} size=\"small\">\n                Delete\n              </Button>\n            </Popconfirm>\n          </Space>\n        ),\n      },\n    ];\n\n    return (\n      <Table\n        columns={childColumns}\n        dataSource={children}\n        rowKey=\"deptId\"\n        pagination={false}\n        size=\"small\"\n      />\n    );\n  };\n\n  const filteredDepartments = departments.filter(dept => {\n    if (!searchValue) return dept.parentId === 0; // Only show top-level departments\n    return dept.deptName.toLowerCase().includes(searchValue.toLowerCase()) && dept.parentId === 0;\n  });\n\n  const columns = [\n    {\n      title: 'Department ID',\n      dataIndex: 'deptId',\n      key: 'deptId',\n      width: 100,\n    },\n    {\n      title: 'Department Name',\n      dataIndex: 'deptName',\n      key: 'deptName',\n      render: (text, record) => (\n        <Space>\n          <BankOutlined style={{ color: '#1890ff' }} />\n          {text}\n          {departments.filter(d => d.parentId === record.deptId).length > 0 && (\n            <Tag color=\"blue\">{departments.filter(d => d.parentId === record.deptId).length} sub-depts</Tag>\n          )}\n        </Space>\n      ),\n    },\n    {\n      title: 'Order',\n      dataIndex: 'orderNum',\n      key: 'orderNum',\n      width: 80,\n      sorter: (a, b) => a.orderNum - b.orderNum,\n    },\n    {\n      title: 'Leader',\n      dataIndex: 'leader',\n      key: 'leader',\n      render: (text) => text || '-',\n    },\n    {\n      title: 'Phone',\n      dataIndex: 'phone',\n      key: 'phone',\n      render: (text) => text || '-',\n    },\n    {\n      title: 'Email',\n      dataIndex: 'email',\n      key: 'email',\n      render: (text) => text || '-',\n    },\n    {\n      title: 'Status',\n      dataIndex: 'status',\n      key: 'status',\n      render: (status) => (\n        <Tag color={status === '0' ? 'green' : 'red'}>\n          {status === '0' ? 'Active' : 'Inactive'}\n        </Tag>\n      ),\n    },\n    {\n      title: 'Create Time',\n      dataIndex: 'createTime',\n      key: 'createTime',\n      width: 180,\n    },\n    {\n      title: 'Actions',\n      key: 'actions',\n      width: 200,\n      render: (_, record) => (\n        <Space size=\"small\">\n          <Button\n            type=\"link\"\n            icon={<EditOutlined />}\n            onClick={() => handleEdit(record)}\n          >\n            Edit\n          </Button>\n          <Popconfirm\n            title=\"Delete Department\"\n            description=\"Are you sure you want to delete this department and all its sub-departments?\"\n            onConfirm={() => handleDelete(record.deptId)}\n            okText=\"Yes\"\n            cancelText=\"No\"\n          >\n            <Button type=\"link\" danger icon={<DeleteOutlined />}>\n              Delete\n            </Button>\n          </Popconfirm>\n        </Space>\n      ),\n    },\n  ];\n\n  return (\n    <div>\n      <Card title=\"Department Management\" style={{ marginBottom: 16 }}>\n        <Row gutter={[16, 16]} justify=\"space-between\" align=\"middle\">\n          <Col span={8}>\n            <Search\n              placeholder=\"Search departments\"\n              value={searchValue}\n              onChange={(e) => setSearchValue(e.target.value)}\n              style={{ width: '100%' }}\n            />\n          </Col>\n          <Col>\n            <Space>\n              <Button\n                type=\"primary\"\n                icon={<PlusOutlined />}\n                onClick={handleAdd}\n              >\n                Add Department\n              </Button>\n              <Button\n                icon={<ReloadOutlined />}\n                onClick={fetchDepartments}\n              >\n                Refresh\n              </Button>\n            </Space>\n          </Col>\n        </Row>\n      </Card>\n\n      <Card>\n        <Table\n          columns={columns}\n          dataSource={filteredDepartments}\n          rowKey=\"deptId\"\n          loading={loading}\n          expandable={{\n            expandedRowRender,\n            rowExpandable: (record) => \n              departments.filter(dept => dept.parentId === record.deptId).length > 0,\n          }}\n          pagination={{\n            pageSize: 10,\n            showSizeChanger: true,\n            showQuickJumper: true,\n            showTotal: (total, range) =>\n              `${range[0]}-${range[1]} of ${total} items`,\n          }}\n        />\n      </Card>\n\n      <Modal\n        title={modalType === 'add' ? 'Add Department' : 'Edit Department'}\n        visible={modalVisible}\n        onOk={handleModalOk}\n        onCancel={() => setModalVisible(false)}\n        width={700}\n        okText={modalType === 'add' ? 'Create' : 'Update'}\n      >\n        <Form\n          form={form}\n          layout=\"vertical\"\n          initialValues={{\n            status: '0',\n            orderNum: 0,\n          }}\n        >\n          <Row gutter={16}>\n            <Col span={12}>\n              <Form.Item\n                name=\"deptName\"\n                label=\"Department Name\"\n                rules={[\n                  { required: true, message: 'Please input department name!' },\n                  { min: 2, max: 30, message: 'Department name must be 2-30 characters!' },\n                ]}\n              >\n                <Input placeholder=\"Enter department name\" />\n              </Form.Item>\n            </Col>\n            <Col span={12}>\n              <Form.Item\n                name=\"parentId\"\n                label=\"Parent Department\"\n              >\n                <TreeSelect\n                  style={{ width: '100%' }}\n                  dropdownStyle={{ maxHeight: 400, overflow: 'auto' }}\n                  treeData={buildTreeData(departments)}\n                  placeholder=\"Select parent department (optional)\"\n                  treeDefaultExpandAll\n                  allowClear\n                />\n              </Form.Item>\n            </Col>\n          </Row>\n\n          <Row gutter={16}>\n            <Col span={12}>\n              <Form.Item\n                name=\"orderNum\"\n                label=\"Display Order\"\n                rules={[\n                  { required: true, message: 'Please input display order!' },\n                ]}\n              >\n                <InputNumber\n                  min={0}\n                  max={9999}\n                  placeholder=\"Enter display order\"\n                  style={{ width: '100%' }}\n                />\n              </Form.Item>\n            </Col>\n            <Col span={12}>\n              <Form.Item\n                name=\"leader\"\n                label=\"Department Leader\"\n              >\n                <Input placeholder=\"Enter department leader\" />\n              </Form.Item>\n            </Col>\n          </Row>\n\n          <Row gutter={16}>\n            <Col span={12}>\n              <Form.Item\n                name=\"phone\"\n                label=\"Contact Phone\"\n                rules={[\n                  { pattern: /^1[3-9]\\d{9}$/, message: 'Please enter a valid phone number!' },\n                ]}\n              >\n                <Input placeholder=\"Enter contact phone\" />\n              </Form.Item>\n            </Col>\n            <Col span={12}>\n              <Form.Item\n                name=\"email\"\n                label=\"Contact Email\"\n                rules={[\n                  { type: 'email', message: 'Please enter a valid email!' },\n                ]}\n              >\n                <Input placeholder=\"Enter contact email\" />\n              </Form.Item>\n            </Col>\n          </Row>\n\n          <Row gutter={16}>\n            <Col span={24}>\n              <Form.Item\n                name=\"status\"\n                label=\"Status\"\n              >\n                <Select>\n                  <Option value=\"0\">Active</Option>\n                  <Option value=\"1\">Inactive</Option>\n                </Select>\n              </Form.Item>\n            </Col>\n          </Row>\n        </Form>\n      </Modal>\n    </div>\n  );\n};\n\nexport default DepartmentManagement;\n"],"names":["Search","Input","Option","Select","DepartmentManagement","departments","setDepartments","useState","loading","setLoading","modalVisible","setModalVisible","modalType","setModalType","selectedDept","setSelectedDept","searchValue","setSearchValue","form","Form","useForm","useEffect","fetchDepartments","async","response","systemAPI","getDepartments","data","code","error","message","handleEdit","record","setFieldsValue","parentId","undefined","handleDelete","deleteDepartment","deptId","success","msg","buildTreeData","arguments","length","filter","dept","map","title","deptName","value","key","children","filteredDepartments","toLowerCase","includes","columns","dataIndex","width","render","text","_jsxs","Space","_jsx","BankOutlined","style","color","d","Tag","sorter","a","b","orderNum","status","_","size","Button","type","icon","EditOutlined","onClick","Popconfirm","description","onConfirm","okText","cancelText","danger","DeleteOutlined","Card","marginBottom","Row","gutter","justify","align","Col","span","placeholder","onChange","e","target","PlusOutlined","handleAdd","resetFields","ReloadOutlined","Table","dataSource","rowKey","expandable","expandedRowRender","padding","childColumns","pagination","rowExpandable","pageSize","showSizeChanger","showQuickJumper","showTotal","total","range","Modal","visible","onOk","values","validateFields","deptData","createDepartment","updateDepartment","onCancel","layout","initialValues","Item","name","label","rules","required","min","max","TreeSelect","dropdownStyle","maxHeight","overflow","treeData","treeDefaultExpandAll","allowClear","InputNumber","pattern"],"sourceRoot":""}